Return-Path: <linux-pci+bounces-19351-lists+linux-pci=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-pci@lfdr.de
Delivered-To: lists+linux-pci@lfdr.de
Received: from ny.mirrors.kernel.org (ny.mirrors.kernel.org [147.75.199.223])
	by mail.lfdr.de (Postfix) with ESMTPS id 0EF2CA02EA6
	for <lists+linux-pci@lfdr.de>; Mon,  6 Jan 2025 18:13:18 +0100 (CET)
Received: from smtp.subspace.kernel.org (relay.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ny.mirrors.kernel.org (Postfix) with ESMTPS id D697516507F
	for <lists+linux-pci@lfdr.de>; Mon,  6 Jan 2025 17:13:15 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 665EA19CC2A;
	Mon,  6 Jan 2025 17:13:14 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="MYKTRX+w"
X-Original-To: linux-pci@vger.kernel.org
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 38D12CA64;
	Mon,  6 Jan 2025 17:13:13 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1736183594; cv=none; b=ZAhfnuD9Xtl7DdmXOpIZIgS/HAF25suQ3NrKKZcjMoIDloX/KiC46U8VunJOoCLuX0d3srKVCWq4biqOAVxkxUpo9WOs9ZIgBx/+sICLS9U2u+Ey6PsIWV+YkWRpsfJgk5akwK8+9oP1CJxZdi4M7hTwUa7GX6IQ2CyYKjB3OAg=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1736183594; c=relaxed/simple;
	bh=Dwnnr5kiXC1fjmc09CMLSRDw65OhSZzQ1RkgRz4mSvc=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=eY6Mgo4XDv6zvDlgO10TxkO7NbAa9d9kWQPl2z5eUzyiZFdDwxsYeR4a3DlQllLfdFmvXfulvsJzGjLBktq0hiUHmBRMWFNupMozs0+4LzTQ0K/oaJDOW35IB6KFFQbkxGa3U/jHaw21Hx2xIwLzJB2lVKD7AI85lzGuksuKj3I=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=MYKTRX+w; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 9449BC4CED2;
	Mon,  6 Jan 2025 17:13:13 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1736183593;
	bh=Dwnnr5kiXC1fjmc09CMLSRDw65OhSZzQ1RkgRz4mSvc=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=MYKTRX+w+baHYyivC3bP0r6cj+gE/F4d3h0T9UH1rCZZazfxSifyTpo6CdcTcYLU0
	 2FUbH2FfYEPM27FrUNEOns3C+IItUogJLN3OM37+ZACTojnSZDVPXnAKjdE+14eXdS
	 Vj9jXR0ydwXW7TQHk93sM0CKbfHqpaabQUOu57oXiXDDmDq0AzZVv8FAT92OtihP4q
	 oJ8JuISw3JLIBCgtNNdL6Lr3U56qNWH7Pv9sY2VJW6hL5T9k8QiqhjXAIZN71Wx5vk
	 UlVURy2I7qoS8OHH7zHdgAbooSDht16G0INokLkFTna8PiRcadbA0DHmerKxupAgZ3
	 osRW3vLo+RaFQ==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.95)
	(envelope-from <maz@kernel.org>)
	id 1tUqf9-009UnQ-2p;
	Mon, 06 Jan 2025 17:13:11 +0000
Date: Mon, 06 Jan 2025 17:13:10 +0000
Message-ID: <861pxfq315.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Frank Li <Frank.li@nxp.com>
Cc: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>,	Krzysztof
 =?UTF-8?B?V2lsY3p5xYRza2k=?= <kw@linux.com>,	Kishon Vijay Abraham I
 <kishon@kernel.org>,	Bjorn Helgaas <bhelgaas@google.com>,	Arnd Bergmann
 <arnd@arndb.de>,	Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
	"Rafael J. Wysocki" <rafael@kernel.org>,	Thomas Gleixner
 <tglx@linutronix.de>,	Anup Patel <apatel@ventanamicro.com>,
	linux-kernel@vger.kernel.org,	linux-pci@vger.kernel.org,
	imx@lists.linux.dev,	Niklas Cassel <cassel@kernel.org>,	dlemoal@kernel.org,
	jdmason@kudzu.us,	linux-arm-kernel@lists.infradead.org
Subject: Re: [PATCH v13 4/9] irqchip/gic-v3-its: Add DOMAIN_BUS_DEVICE_PCI_EP_MSI support
In-Reply-To: <Z3wG6pMbjsldqU/n@lizhi-Precision-Tower-5810>
References: <20241218-ep-msi-v13-0-646e2192dc24@nxp.com>
	<20241218-ep-msi-v13-4-646e2192dc24@nxp.com>
	<868qscq70x.wl-maz@kernel.org>
	<Z2RRimPlT41Ru281@lizhi-Precision-Tower-5810>
	<Z3wG6pMbjsldqU/n@lizhi-Precision-Tower-5810>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/29.4
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: linux-pci@vger.kernel.org
List-Id: <linux-pci.vger.kernel.org>
List-Subscribe: <mailto:linux-pci+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-pci+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: Frank.li@nxp.com, manivannan.sadhasivam@linaro.org, kw@linux.com, kishon@kernel.org, bhelgaas@google.com, arnd@arndb.de, gregkh@linuxfoundation.org, rafael@kernel.org, tglx@linutronix.de, apatel@ventanamicro.com, linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org, imx@lists.linux.dev, cassel@kernel.org, dlemoal@kernel.org, jdmason@kudzu.us, linux-arm-kernel@lists.infradead.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

On Mon, 06 Jan 2025 16:38:02 +0000,
Frank Li <Frank.li@nxp.com> wrote:
>=20
> On Thu, Dec 19, 2024 at 12:02:02PM -0500, Frank Li wrote:
> > On Thu, Dec 19, 2024 at 10:52:30AM +0000, Marc Zyngier wrote:
> > > On Wed, 18 Dec 2024 23:08:39 +0000,
> > > Frank Li <Frank.Li@nxp.com> wrote:
> > > >
> > > >            =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80=E2=94=90
> > > >            =E2=94=82                                =E2=94=82
> > > >            =E2=94=82     PCI Endpoint Controller    =E2=94=82
> > > >            =E2=94=82                                =E2=94=82
> > > >            =E2=94=82   =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=90  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=90     =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=90 =E2=94=82
> > > > PCI Bus    =E2=94=82   =E2=94=82     =E2=94=82  =E2=94=82     =E2=
=94=82     =E2=94=82     =E2=94=82 =E2=94=82
> > > > =E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=96=BA =E2=94=82   =E2=94=82Func1=E2=94=82  =E2=94=82Func=
2=E2=94=82 ... =E2=94=82Func =E2=94=82 =E2=94=82
> > > > Doorbell   =E2=94=82   =E2=94=82     =E2=94=82  =E2=94=82     =E2=
=94=82     =E2=94=82<n>  =E2=94=82 =E2=94=82
> > > >            =E2=94=82   =E2=94=82     =E2=94=82  =E2=94=82     =E2=
=94=82     =E2=94=82     =E2=94=82 =E2=94=82
> > > >            =E2=94=82   =E2=94=94=E2=94=80=E2=94=80=E2=94=AC=E2=94=
=80=E2=94=80=E2=94=98  =E2=94=94=E2=94=80=E2=94=80=E2=94=AC=E2=94=80=E2=94=
=80=E2=94=98     =E2=94=94=E2=94=80=E2=94=80=E2=94=AC=E2=94=80=E2=94=80=E2=
=94=98 =E2=94=82
> > > >            =E2=94=82      =E2=94=82        =E2=94=82           =E2=
=94=82    =E2=94=82
> > > >            =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=BC=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=BC=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=BC=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80=E2=94=98
> > > >                   =E2=94=82        =E2=94=82           =E2=94=82
> > > >                   =E2=96=BC        =E2=96=BC           =E2=96=BC
> > > >                =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=90
> > > >                =E2=94=82    MSI Controller      =E2=94=82
> > > >                =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=98
> > > >
> > > > Add domain DOMAIN_BUS_DEVICE_PCI_EP_MSI to allocate MSI domain for =
Endpoint
> > > > function in PCI Endpoint (EP) controller, So PCI Root Complex (RC) =
can
> > > > write MSI message to MSI controller to trigger doorbell IRQ for dif=
ference
> > > > EP functions.
> > > >
> > > > Signed-off-by: Frank Li <Frank.Li@nxp.com>
> > > > ---
> > > > change from v12 to v13
> > > > - new patch
> > >
> > > This might be v13, but after all this time, I have no idea what you
> > > are trying to do. You keep pasting this non-ASCII drawing in commit
> > > messages, but I still have no idea what this PCI Bus Doorbell
> > > represents.
> >
> > PCI Bus/Doorbell is two words. Basic over picture is a PCI EP devices (=
such
> > as imx95), which run linux and PCI Endpoint framework. i.MX95 connect to
> > PCI Host, such as PC (x86).
> >
> > i.MX95 can use standard PCI MSI framework to issue a irq to X86. but th=
ere
> > are not reverse direction. X86 try write some MMIO register ( mapped PCI
> > bar0). But i.MX95 don't know it have been modified. So currently soluti=
on
> > is create a polling thread to check every 10ms.
> >
> > So this patches try resolve this problem at the platform, which have MSI
> > controller such as ITS.
> >
> > after this patches, i.MX95 can create a PCI Bar1, which map to MSI
> > controller register space,  when X86 write data to Bar1 (call as doorbe=
ll),
> > a irq will be triggered at i.MX95.
> >
> > Doorbell in diagram means 'push doorbell' (write data to bar<n>).
> >
> > >
> > > I appreciate the knowledge shortage is on my end, but it would
> > > definitely help if someone would take the time to explain what this is
> > > all about.
> >
> > I am not sure if diagram in corver letter can help this, or above
> > descriptions is enough.
> >
> >
> > =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=90   =E2=94=8C=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=90   =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=90
> > =E2=94=82            =E2=94=82   =E2=94=82                             =
      =E2=94=82   =E2=94=82                =E2=94=82
> > =E2=94=82            =E2=94=82   =E2=94=82 PCI Endpoint                =
      =E2=94=82   =E2=94=82 PCI Host       =E2=94=82
> > =E2=94=82            =E2=94=82   =E2=94=82                             =
      =E2=94=82   =E2=94=82                =E2=94=82
> > =E2=94=82            =E2=94=82=E2=97=84=E2=94=80=E2=94=80=E2=94=A4 1.pl=
atform_msi_domain_alloc_irqs()=E2=94=82   =E2=94=82                =E2=94=82
> > =E2=94=82            =E2=94=82   =E2=94=82                             =
      =E2=94=82   =E2=94=82                =E2=94=82
> > =E2=94=82 MSI        =E2=94=9C=E2=94=80=E2=94=80=E2=96=BA=E2=94=82 2.wr=
ite_msi_msg()                 =E2=94=9C=E2=94=80=E2=94=80=E2=96=BA=E2=94=9C=
=E2=94=80BAR<n>         =E2=94=82
> > =E2=94=82 Controller =E2=94=82   =E2=94=82   update doorbell register a=
ddress=E2=94=82   =E2=94=82                =E2=94=82
> > =E2=94=82            =E2=94=82   =E2=94=82   for BAR                   =
      =E2=94=82   =E2=94=82                =E2=94=82
> > =E2=94=82            =E2=94=82   =E2=94=82                             =
      =E2=94=82   =E2=94=82 3. Write BAR<n>=E2=94=82
> > =E2=94=82            =E2=94=82=E2=97=84=E2=94=80=E2=94=80=E2=94=BC=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=BC=E2=94=80=E2=94=80=E2=94=80=E2=94=A4                =
=E2=94=82
> > =E2=94=82            =E2=94=82   =E2=94=82                             =
      =E2=94=82   =E2=94=82                =E2=94=82
> > =E2=94=82            =E2=94=9C=E2=94=80=E2=94=80=E2=96=BA=E2=94=82 4.Ir=
q Handle                      =E2=94=82   =E2=94=82                =E2=94=82
> > =E2=94=82            =E2=94=82   =E2=94=82                             =
      =E2=94=82   =E2=94=82                =E2=94=82
> > =E2=94=82            =E2=94=82   =E2=94=82                             =
      =E2=94=82   =E2=94=82                =E2=94=82
> > =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=98   =E2=94=94=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=98   =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=98
> > (* some detail have been changed and don't affect understand overall
> > picture)
> >
> > >
> > > From what I gather, the ITS is actually on an end-point, and get
> > > writes from the host, but that doesn't answer much.
> >
> > Yes, baisc it is correct. PCI RC -> PCIe Bus TLP -> PCI Endpoint Ctrl ->
> > AXI transaction -> ITS MMIO map register -> CPU IRQ.
> >
> > The major problem how to distingiush from difference PCI Endpoint funct=
ion
> > driver. There are have many EP functions as much as 8, which quite simi=
lar
> > standard PCI, one PCIe device can have 8 physical functions.
> >
> > >
> > > > ---
> > > >  drivers/irqchip/irq-gic-v3-its-msi-parent.c | 19 +++++++++++++++++=
+-
> > > >  1 file changed, 18 insertions(+), 1 deletion(-)
> > > >
> > > > diff --git a/drivers/irqchip/irq-gic-v3-its-msi-parent.c b/drivers/=
irqchip/irq-gic-v3-its-msi-parent.c
> > > > index b2a4b67545b82..16e7d53f0b133 100644
> > > > --- a/drivers/irqchip/irq-gic-v3-its-msi-parent.c
> > > > +++ b/drivers/irqchip/irq-gic-v3-its-msi-parent.c
> > > > @@ -5,6 +5,7 @@
> > > >  // Copyright (C) 2022 Intel
> > > >
> > > >  #include <linux/acpi_iort.h>
> > > > +#include <linux/pci-ep-msi.h>
> > > >  #include <linux/pci.h>
> > > >
> > > >  #include "irq-gic-common.h"
> > > > @@ -173,6 +174,19 @@ static int its_pmsi_prepare(struct irq_domain =
*domain, struct device *dev,
> > > >  	return its_pmsi_prepare_devid(domain, dev, nvec, info, dev_id);
> > > >  }
> > > >
> > > > +static int its_pci_ep_msi_prepare(struct irq_domain *domain, struc=
t device *dev,
> > > > +				  int nvec, msi_alloc_info_t *info)
> > > > +{
> > > > +	u32 dev_id;
> > > > +	int ret;
> > > > +
> > > > +	ret =3D pci_epf_msi_domain_get_msi_rid(dev, &dev_id);
> > >
> > > What this doesn't express is *how* are the writes conveyed to the ITS.
> > > Specifically, the DevID is normally sampled as sideband information at
> > > during the write transaction.
> >
> > Like PCI host, there msi-map in dts file, which descript how map PCI RID
> > to DevID, such as
> > 	msi-map =3D <0 $its 0x80 8>;
> >
> > This informtion should be descripted in DTS or ACPI ...
> >
> > >
> > > Obviously, you can't do that over PCI. So there is a lot of
> > > undisclosed assumption about how the ITS is integrated, and how it
> > > samples the DevID.
> >
> > Yes, it should be platform PCI endpoint ctrl driver jobs.  Platform EP
> > driver should implement this type of covert. Such as i.MX95, there are
> > hardware call LUT in PCI ctrl,  which can convert PCI' request ID to De=
vID
> > here.
> >
> > On going patch may help understand these
> > https://lore.kernel.org/linux-pci/20241210-imx95_lut-v8-0-2e730b2e5fde@=
nxp.com/
> >
> > If use latest ITS MSI64 should be simple, only need descript it at DTS
> > (I have not hardware to test this case yet).
> > pci-ep {
> > 	...
> > 	msi-map =3D <0 &its, 0x<8_0000, 0xff>;
> > 			      ^, ctrl ID.
> > 	msi-mask =3D <0xff>;
> > 	...
> > }
> >
> > >
> > > My conclusion is that this is not as generic as it seems to be. It is
> > > definitely tied to implementation-specific behaviours, none of which
> > > are explained.
> >
> > Compared to standard PCI MSI, which also have implementation-specific
> > behaviours, which convert PCI request ID to DevID Or stream ID.
> > https://lore.kernel.org/linux-pci/20241210-imx95_lut-v8-0-2e730b2e5fde@=
nxp.com/
> > (I have struggle this for almost one year for this implementation-speci=
fic
> > part)
> >
> > Well defined and mature PCI standard, MSI still need two parts, common =
part
> > and "implementation-specific" part.
> >
> > Common part of standard PCI is at several place, such its driver/msi
> > libary/ kernel msi code ...
> >
> > "implementation-specific" part is in PCI host bridge driver, such as
> > drivers/pci/controller/dwc/pcie-qcom.c
> >
> > This solution already test by Tested-by: Niklas Cassel <cassel@kernel.o=
rg>
> > who use another dwc controller, which they already implemented
> > "implementation-specific" by only update dts to provide hardware
> > information.(I guest he use ITS's MSI64)
> >
> > Because it is new patches, I have not added Niklas's test-by tag. There
> > are not big functional change since Nikas test. The major change is make
> > msi part better align current MSI framework according to Thomas's
> > suggestion.
>=20
> Thomas Gleixner and Marc Zyngier:
>=20
> Happy new year! Do you have additioinal comments for this?

I think this is pretty pointless.

- DOMAIN_BUS_DEVICE_PCI_EP_MSI is just a reinvention of platform MSI,
  and I don't see why we need to have *two* square wheels

- The whole thing relies on IMPDEF behaviours that are not described,
  making it impossible to write a *host* driver that works
  universally.  Specifically, you completely ignored my comment about
  *how* is the DevID sampled on the ITS side. How is that supposed to
  work when the DevID is carried as AXI user bits instead of data? How
  can the host provide that information?

- your "but it's been tested by..." argument doesn't carry much
  weight, as the kernel has at least one critical bug per "Tested-by"
  tag

Given that, I don't see how this series is fit for purpose.

Thanks,

	M.

--=20
Without deviation from the norm, progress is not possible.

